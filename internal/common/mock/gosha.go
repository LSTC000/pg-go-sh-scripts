// Code generated by MockGen. DO NOT EDIT.
// Source: ./gosha.go

// Package mock_common is a generated GoMock package.
package mock_common

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockICustomGoshaExec is a mock of ICustomGoshaExec interface.
type MockICustomGoshaExec struct {
	ctrl     *gomock.Controller
	recorder *MockICustomGoshaExecMockRecorder
}

// MockICustomGoshaExecMockRecorder is the mock recorder for MockICustomGoshaExec.
type MockICustomGoshaExecMockRecorder struct {
	mock *MockICustomGoshaExec
}

// NewMockICustomGoshaExec creates a new mock instance.
func NewMockICustomGoshaExec(ctrl *gomock.Controller) *MockICustomGoshaExec {
	mock := &MockICustomGoshaExec{ctrl: ctrl}
	mock.recorder = &MockICustomGoshaExecMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockICustomGoshaExec) EXPECT() *MockICustomGoshaExecMockRecorder {
	return m.recorder
}

// Run mocks base method.
func (m *MockICustomGoshaExec) Run() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Run")
}

// Run indicates an expected call of Run.
func (mr *MockICustomGoshaExecMockRecorder) Run() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Run", reflect.TypeOf((*MockICustomGoshaExec)(nil).Run))
}
