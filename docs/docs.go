// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/bash": {
            "post": {
                "description": "Create bash script",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bash"
                ],
                "summary": "Create",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Bash script file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/bash.Bash"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.HTTPError"
                        }
                    }
                }
            }
        },
        "/bash/execute": {
            "post": {
                "description": "Execute bash script",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bash"
                ],
                "summary": "Execute",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Execute type: if true, then in a multithreading, otherwise in a single thread",
                        "name": "isSync",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Execute bash script model",
                        "name": "execute",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/bash.ExecBashDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Message"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.HTTPError"
                        }
                    }
                }
            }
        },
        "/bash/execute/list": {
            "post": {
                "description": "Execute list of bash scripts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bash"
                ],
                "summary": "Execute list",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Execute type: if true, then in a multithreading, otherwise in a single thread",
                        "name": "isSync",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "List of execute bash script models",
                        "name": "execute",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/bash.ExecBashDTO"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Message"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.HTTPError"
                        }
                    }
                }
            }
        },
        "/bash/list": {
            "get": {
                "description": "Get list of bash scripts",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bash"
                ],
                "summary": "Get list",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/bash.Bash"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.HTTPError"
                        }
                    }
                }
            }
        },
        "/bash/{id}": {
            "get": {
                "description": "Get bash script by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bash"
                ],
                "summary": "Get by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of bash script",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/bash.Bash"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.HTTPError"
                        }
                    }
                }
            }
        },
        "/bash/{id}/file": {
            "get": {
                "description": "Get bash script file by id",
                "produces": [
                    "application/x-www-form-urlencoded"
                ],
                "tags": [
                    "Bash"
                ],
                "summary": "Get file by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of bash script",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "bash.Bash": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "bash.ExecBashDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "timeoutSeconds": {
                    "type": "integer"
                }
            }
        },
        "model.HTTPError": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "string"
                },
                "httpCode": {
                    "type": "integer"
                },
                "serviceCode": {
                    "type": "integer"
                }
            }
        },
        "model.Message": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "0.0.0.0:8000",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Bash Scripts",
	Description:      "This is an API for running bash scripts",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
