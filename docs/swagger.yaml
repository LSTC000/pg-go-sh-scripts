basePath: /api/v1
definitions:
  dto.ExecBashDTO:
    properties:
      id:
        example: 59628b82-356c-4745-bc81-187015cde387
        type: string
      timeoutSeconds:
        type: integer
    type: object
  model.Bash:
    properties:
      body:
        type: string
      createdAt:
        example: "2024-04-14T15:50:21.907561+07:00"
        type: string
      id:
        example: 59628b82-356c-4745-bc81-187015cde387
        type: string
      title:
        type: string
    type: object
  model.BashLog:
    properties:
      bashId:
        example: 59628b82-356c-4745-bc81-187015cde387
        type: string
      body:
        type: string
      createdAt:
        example: "2024-04-14T15:50:21.907561+07:00"
        type: string
      id:
        example: f4f4d096-ef4a-4649-8346-a952e2ca27d3
        type: string
      isError:
        type: boolean
    type: object
  schema.HTTPError:
    properties:
      detail:
        type: string
      httpCode:
        type: integer
      serviceCode:
        type: integer
    type: object
  schema.Message:
    properties:
      message:
        type: string
    type: object
  schema.SwagBashLogPaginationLimitOffsetPage:
    properties:
      items:
        items:
          $ref: '#/definitions/model.BashLog'
        type: array
      limit:
        type: integer
      offset:
        type: integer
      total:
        type: integer
    type: object
  schema.SwagBashPaginationLimitOffsetPage:
    properties:
      items:
        items:
          $ref: '#/definitions/model.Bash'
        type: array
      limit:
        type: integer
      offset:
        type: integer
      total:
        type: integer
    type: object
host: 0.0.0.0:8000
info:
  contact: {}
  description: This is an API for running bash scripts
  title: Bash Scripts
  version: 1.0.0
paths:
  /bash:
    post:
      consumes:
      - multipart/form-data
      description: Create bash script
      parameters:
      - description: Bash script file
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Bash'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schema.HTTPError'
      summary: Create
      tags:
      - Bash
  /bash/{id}:
    delete:
      description: Remove bash script by id
      parameters:
      - description: ID of bash script
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Bash'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schema.HTTPError'
      summary: Remove by id
      tags:
      - Bash
    get:
      description: Get bash script by id
      parameters:
      - description: ID of bash script
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Bash'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schema.HTTPError'
      summary: Get by id
      tags:
      - Bash
  /bash/{id}/file:
    get:
      description: Get bash script file by id
      parameters:
      - description: ID of bash script
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/x-www-form-urlencoded
      responses:
        "200":
          description: OK
          schema:
            type: file
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schema.HTTPError'
      summary: Get file by id
      tags:
      - Bash
  /bash/execute/list:
    post:
      consumes:
      - application/json
      description: Execute list of bash scripts
      parameters:
      - description: 'Execute type: if true, then in a multithreading, otherwise in
          a single thread'
        in: query
        name: isSync
        required: true
        type: boolean
      - description: List of execute bash script models
        in: body
        name: execute
        required: true
        schema:
          items:
            $ref: '#/definitions/dto.ExecBashDTO'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.Message'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schema.HTTPError'
      summary: Execute List
      tags:
      - Bash
  /bash/list:
    get:
      description: Get list of bash scripts
      parameters:
      - description: Limit param of pagination
        in: query
        name: limit
        required: true
        type: integer
      - description: Offset param of pagination
        in: query
        name: offset
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.SwagBashPaginationLimitOffsetPage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schema.HTTPError'
      summary: Get list
      tags:
      - Bash
  /bash/log/{bashId}/list:
    get:
      description: Get list of bash logs by bash id
      parameters:
      - description: ID of bash script
        in: path
        name: bashId
        required: true
        type: string
      - description: Limit param of pagination
        in: query
        name: limit
        required: true
        type: integer
      - description: Offset param of pagination
        in: query
        name: offset
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.SwagBashLogPaginationLimitOffsetPage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schema.HTTPError'
      summary: Get list by bash id
      tags:
      - Bash Log
swagger: "2.0"
