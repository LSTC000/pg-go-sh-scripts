// Code generated by MockGen. DO NOT EDIT.
// Source: ./helper.go

// Package mock_gosha is a generated GoMock package.
package mock_gosha

import (
	os "os"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIHelper is a mock of IHelper interface.
type MockIHelper struct {
	ctrl     *gomock.Controller
	recorder *MockIHelperMockRecorder
}

// MockIHelperMockRecorder is the mock recorder for MockIHelper.
type MockIHelperMockRecorder struct {
	mock *MockIHelper
}

// NewMockIHelper creates a new mock instance.
func NewMockIHelper(ctrl *gomock.Controller) *MockIHelper {
	mock := &MockIHelper{ctrl: ctrl}
	mock.recorder = &MockIHelperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIHelper) EXPECT() *MockIHelperMockRecorder {
	return m.recorder
}

// GetTmpFile mocks base method.
func (m *MockIHelper) GetTmpFile(arg0 string) (*os.File, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTmpFile", arg0)
	ret0, _ := ret[0].(*os.File)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTmpFile indicates an expected call of GetTmpFile.
func (mr *MockIHelperMockRecorder) GetTmpFile(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTmpFile", reflect.TypeOf((*MockIHelper)(nil).GetTmpFile), arg0)
}

// RemoveTmpFile mocks base method.
func (m *MockIHelper) RemoveTmpFile(arg0 *os.File) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveTmpFile", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// RemoveTmpFile indicates an expected call of RemoveTmpFile.
func (mr *MockIHelperMockRecorder) RemoveTmpFile(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveTmpFile", reflect.TypeOf((*MockIHelper)(nil).RemoveTmpFile), arg0)
}
